<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="bCancel.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAATQAAABgCAYAAACT6Y7KAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAAEnQAABJ0Ad5mH3gAAANpSURBVHhe7dsxb1NXGMfhjBkzMmbM6JExY0aPHvMxvDH6
        Y2TM6DFjEKgKhSJTIuS2Q1wQyEAU3KpCFkLocN57VTdRXEbwffU80l8CBxh/Oudes/VXKcXMLMMEzczS
        TNDMLM0EzczSTNDMLM0EzczS7JtB+7BcltnxcXk+GJSn+/vlbHe33N/aMjP7bovuRH+e9fvl4uioXC0W
        a3sV+9+gvTo5af6hFzVm72rUFqenZTmb1Z8AfD/RnejP5XhcpoeHTZcibOu6dStoUb/z+pd+PTgon+bz
        +gnA5vhcGxVhm9RGXdZGXe/XjaBFzB73emVe6wewya7qLfKXu3fL+3qCWxu0OJmJGdAVcRWN52u3ghbP
        zOKaCdAlF8Nh+WM0+i9o8TYzHrR5ZgZ0zZfarye9Xnk7nbZBizcG8ZANoIte1hPatJ7UmqDF9zvilShA
        F/0zmTQvNJugPdrbKx/rcQ2gi+La+WB7uw3aw52d5rsdAF0V/6ugCVr8AqDLBA1IQ9CANAQNSEPQgDQE
        DUhD0IA0BA1IQ9CANAQNSEPQgDQEDUhD0IA0BA1IQ9CANAQNSEPQgDQEDUhD0IA0BA1IQ9CANAQNSEPQ
        gDQEDUhD0IA0BA1IQ9CANAQNSEPQgDQEDUhD0IA0BA1IQ9CANAQNSEPQgDQEDUhD0IA0BA1IQ9CANAQN
        SEPQgDQEDUhD0IA0BA1IQ9CANAQNSEPQgDQEDUhD0IA0BA1IQ9CANAQNSEPQgDQEDUhD0IA0BA1IQ9CA
        NAQNSEPQgDQEDUhD0IA0BA1IQ9CANFZBe7C9Xb4sl+2nAB20CtrZ7m5ZzmbtpwAdtAra5OCgXJ2ctJ8C
        dMzH6bQ82ttrg/b7aFQuhsP2JwAdMz86KueHh23Q3tfr5s+1bp6jAV103u+Xl+NxG7TYb/fulVkdQJe8
        Oz4uzweDpmOroH2op7On+/vl77Oz+DMAG+/TfN7cLq8Wi5tBi72dTsuTXq95wAawySJmk3oIe316umrY
        jaDF3tQT2uMatT9Ho/o7gM1zOR43J7PrMYvdClosrp/T4bCpX7w9iBIC/Eif67Uynpe9GAzKs35/dc28
        vrVB+3dRv3gV+tOdO82X1szMftQe7uw0D/9nNWrrehX7ZtDMzLo0QTOzNBM0M0szQTOzNBM0M0uyUr4C
        XXHeAEHg2DcAAAAASUVORK5CYII=
</value>
  </data>
  <data name="bOK.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAS8AAABgCAYAAABMp/TVAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAAEnQAABJ0Ad5mH3gAAANoSURBVHhe7dq/b1NXGMfhjBkzMmbM6JExY0aPHvNneGP0
        n5Exo8eMqUBVKBSZEqHbdohL1cpAFNyqQhZC6HDee1WTKIYNuK/0PNJXSpwf40f3HHvrn1KKmVm2iZeZ
        pZx4mVnKiZeZpZx4mVnKiZeZpdwX4/VmtSrz4+PybDQqT/b3y9nubvlha8vM7KssGhOteTocloujo3K1
        XG5sU+yz8frz5KT9R89ruF7VgC1PT8tqPq8/Afg6ojHRmsvptDSHh22DImKbGnUrXlG68/pHvxwclHeL
        RX0F4Pt4X3sUEZvVHl3WHl1v1Y14RbgeDQZlUUsH0BdX9ST489275XV9MtsYr3jiEi6gj+I4Gfdht+IV
        d1xxVAToq4vxuPw+mXyKV7yrGBdj7riAPvtQW/V4MCgvm6aLV9zmx6UYQN+9qE9eTX0Ca+MVn6mItyYB
        +u6/2ax9Y7GN18O9vfK2PoYB9F0cHe9vb3fxerCz036eAiCD+DR+G6/4AiAL8QJSEi8gJfECUhIvICXx
        AlISLyAl8QJSEi8gJfECUhIvICXxAlISLyAl8QJSEi8gJfECUhIvICXxAlISLyAl8QJSEi8gJfECUhIv
        ICXxAlISLyAl8QJSEi8gJfECUhIvICXxAlISLyAl8QJSEi8gJfECUhIvICXxAlISLyAl8QJSEi8gJfEC
        UhIvICXxAlISLyAl8QJSEi8gJfECUhIvICXxAlISLyAl8QJSEi8gJfECUhIvICXxAlISLyAl8QJSEi8g
        JfECUhIvICXxAlISLyAl8QJSEi8gpXW87m9vlw+rVfcqQM+t43W2u1tW83n3KkDPreM1OzgoVycn3asA
        Pfa2acrDvb0uXr9NJuViPO5+AtBji6Ojcn542MXrdT0y/lRL5t4L6Lvz4bC8mE67eMV+vXevzOsA+urV
        8XF5Nhq1zVrH60196nqyv1/+PTuL3wHolXeLRXtCvFoub8Yr9rJpyuPBoL0QA+iLCNesPlz9dXq67tWN
        eMX+rk9ej2rA/phM6ncA39fldNo+cV0PV+xWvGJxhGzG47Z0cbMf1QP4Vt7Xo2Hcbz0fjcrT4XB9VLy+
        jfH6f1G6eEvyxzt32g+FmZl9iz3Y2Wkv5uc1YJvaFPtivMzM+jrxMrOUEy8zSznxMrOUEy8zS7hSPgIc
        wX6yCpnx5AAAAABJRU5ErkJggg==
</value>
  </data>
</root>